// Code generated by goctl. DO NOT EDIT!
// Source: expand.proto

//go:generate mockgen -destination ./expander_mock.go -package expander -source $GOFILE

package expander

import (
	"context"

	expand "shorturl/rpc/expand/pb"

	"github.com/tal-tech/go-zero/core/jsonx"
	"github.com/tal-tech/go-zero/rpcx"
)

type (
	Expander interface {
		Expand(ctx context.Context, in *ExpandReq) (*ExpandResp, error)
	}

	defaultExpander struct {
		cli rpcx.Client
	}
)

func NewExpander(cli rpcx.Client) Expander {
	return &defaultExpander{
		cli: cli,
	}
}

func (m *defaultExpander) Expand(ctx context.Context, in *ExpandReq) (*ExpandResp, error) {
	var request expand.ExpandReq
	bts, err := jsonx.Marshal(in)
	if err != nil {
		return nil, errJsonConvert
	}

	err = jsonx.Unmarshal(bts, &request)
	if err != nil {
		return nil, errJsonConvert
	}

	client := expand.NewExpanderClient(m.cli.Conn())
	resp, err := client.Expand(ctx, &request)
	if err != nil {
		return nil, err
	}

	var ret ExpandResp
	bts, err = jsonx.Marshal(resp)
	if err != nil {
		return nil, errJsonConvert
	}

	err = jsonx.Unmarshal(bts, &ret)
	if err != nil {
		return nil, errJsonConvert
	}

	return &ret, nil
}
