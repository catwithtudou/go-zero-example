// Code generated by goctl. DO NOT EDIT!
// Source: shorten.proto

//go:generate mockgen -destination ./shortener_mock.go -package shortener -source $GOFILE

package shortener

import (
	"context"

	shorten "shorturl/rpc/shorten/pb"

	"github.com/tal-tech/go-zero/core/jsonx"
	"github.com/tal-tech/go-zero/rpcx"
)

type (
	Shortener interface {
		Shorten(ctx context.Context, in *ShortenReq) (*ShortenResp, error)
	}

	defaultShortener struct {
		cli rpcx.Client
	}
)

func NewShortener(cli rpcx.Client) Shortener {
	return &defaultShortener{
		cli: cli,
	}
}

func (m *defaultShortener) Shorten(ctx context.Context, in *ShortenReq) (*ShortenResp, error) {
	var request shorten.ShortenReq
	bts, err := jsonx.Marshal(in)
	if err != nil {
		return nil, errJsonConvert
	}

	err = jsonx.Unmarshal(bts, &request)
	if err != nil {
		return nil, errJsonConvert
	}

	client := shorten.NewShortenerClient(m.cli.Conn())
	resp, err := client.Shorten(ctx, &request)
	if err != nil {
		return nil, err
	}

	var ret ShortenResp
	bts, err = jsonx.Marshal(resp)
	if err != nil {
		return nil, errJsonConvert
	}

	err = jsonx.Unmarshal(bts, &ret)
	if err != nil {
		return nil, errJsonConvert
	}

	return &ret, nil
}
